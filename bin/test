#!/usr/bin/env bash
# bin/test <build-dir> <cache-dir> <env-dir>

# https://kvz.io/blog/2013/11/21/bash-best-practices/

### Configure environment
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

if [ "$STACK" != "heroku-16" ] && [ "$STACK" != "heroku-18" ]; then
	echo "Need heroku-16 or heroku-18 stack"
	exit 1
fi

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

mkdir -p $BUILD_DIR/.profile.d
cp $BP_DIR/profile/* $BUILD_DIR/.profile.d/

### Load dependencies
source $BP_DIR/lib/utils

export_env_dir "$ENV_DIR"
export NUGET_XMLDOC_MODE=${NUGET_XMLDOC_MODE:-skip}
export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=${DOTNET_SKIP_FIRST_TIME_EXPERIENCE:-1}
export DOTNET_CLI_TELEMETRY_OPTOUT=${DOTNET_CLI_TELEMETRY_OPTOUT:-1}
DOTNET_SDK_VERSION=${DOTNET_SDK_VERSION:-2.2.204}
DOTNET_RUNTIME_VERSION=${DOTNET_RUNTIME_VERSION:-2.2.5}
BUILD_CONFIGURATION=${BUILD_CONFIGURATION:-Debug}

COVERAGE_DISABLED=${COVERAGE_DISABLED:-false}
TRX2JUNIT_DISABLED=${TRX2JUNIT_DISABLED:-false}
TESTRESULTS_FILE=${TESTRESULTS_FILE:-TestResults.trx}
EXITCODE=0

echo "Installing dotnet"
install_dotnet $BUILD_DIR $CACHE_DIR $DOTNET_SDK_VERSION $DOTNET_RUNTIME_VERSION

export PATH="${BUILD_DIR}/.heroku/dotnet:${PATH}"

cd $BUILD_DIR

export NUGET_PACKAGES="${CACHE_DIR}/nuget/cache"

if [ $COVERAGE_DISABLED != true ]; then
    echo "installing coverlet"
    find . -iname *.csproj -iname *test* -exec dotnet add {} package coverlet.msbuild \;
    export CollectCoverage=true
fi

# run dotnet test without errexit and capture exit code
echo "running dotnet test"
set +o errexit
dotnet test --configuration $BUILD_CONFIGURATION --results-directory `pwd` --logger trx;LogFileName=$TESTRESULTS_FILE && EXITCODE=$? || EXITCODE=$?
set -o errexit

# workaround: --logger trx;LogFileName=... adds a timestamp
# https://github.com/microsoft/vstest/issues/1951
[ -f $TESTRESULTS_FILE ] || echo "moving testresults to $TESTRESULTS_FILE" && mv *.trx $TESTRESULTS_FILE

if [ $TRX2JUNIT_DISABLED != true ]; then
    # this will generate a junit.xml file
    echo "installing trx2junit"
    [ -f tools/trx2junit ] || dotnet tool install trx2junit --tool-path tools
    
    ls -l ${BUILD_DIR}/.heroku/dotnet
    ls -l /tmp/env/dotnet/2.2.204/sdk/dotnet
    
    DOTNET_ROOT=${BUILD_DIR}/.heroku/dotnet
    ./tools/trx2junit $TESTRESULTS_FILE
fi

exit $EXITCODE